{"version":3,"sources":["../../../src/lib/getCommands/index.js"],"names":["config","open","quiet","catchError","notification","err","notify","emoji","message","url","checkForUpdates","catch","isUpdated","tryToBackup","tryToRestore"],"mappings":";;;;;;;;;;;;;;AAAA;;AACA;;;;AACA;;;;AACA;;;;;;kBAEe,UAACA,MAAD,EAASC,IAAT,QAA6B;AAAA,MAAZC,KAAY,QAAZA,KAAY;;AAC1C,MAAMC,aAAa,SAAbA,UAAa,MAAO;AACxBF,SAAKG,YAAL,wBAA8BC,GAA9B;AACA,UAAMA,GAAN;AACD,GAHD;;AAKA,MAAMC,SAAS,SAATA,MAAS,CAACC,KAAD,EAAQC,OAAR;AAAA,WAAoBP,KAAKG,YAAL,0BAA8BG,KAA9B,EAAuCC,OAAvC,EAAgDR,OAAOS,GAAvD,CAApB;AAAA,GAAf;;AAEA,SAAO;AACLC;AAAA,6EAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACS,uBAAQV,MAAR,EAAgBW,KAAhB,CAAsBR,UAAtB,CADT;;AAAA;AACTS,yBADS;;;AAGf,oBAAIA,SAAJ,EAAe;AACbN,yBAAO,IAAP,EAAa,mCAAb;AACD,iBAFD,MAEO,IAAI,CAACJ,KAAL,EAAY;AACjBI,yBAAO,IAAP,EAAa,+BAAb;AACD;;AAPc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAjB;;AAAA;AAAA;AAAA;AAAA,OADK;AAULO;AAAA,6EAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACL,sBAAOb,MAAP,EAAeW,KAAf,CAAqBR,UAArB,CADK;;AAAA;AAEXG,uBAAO,IAAP,EAAa,gCAAb;;AAFW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAb;;AAAA;AAAA;AAAA;AAAA,OAVK;AAcLQ;AAAA,6EAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACN,uBAAQd,MAAR,EAAgBW,KAAhB,CAAsBR,UAAtB,CADM;;AAAA;AAEZG,uBAAO,IAAP,EAAa,mCAAb;;AAFY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAd;;AAAA;AAAA;AAAA;AAAA;AAdK,GAAP;AAmBD,C","file":"index.js","sourcesContent":["import { title, errorTitle } from '../../constants';\nimport updates from './updates';\nimport restore from './restore';\nimport backup from './backup';\n\nexport default (config, open, { quiet }) => {\n  const catchError = err => {\n    open.notification(errorTitle, err);\n    throw err;\n  };\n\n  const notify = (emoji, message) => open.notification(`${title} ${emoji}`, message, config.url);\n\n  return {\n    checkForUpdates: async () => {\n      const isUpdated = await updates(config).catch(catchError);\n\n      if (isUpdated) {\n        notify('❗️', 'Your settings need to be updated.');\n      } else if (!quiet) {\n        notify('👍', 'Your settings are up to date.');\n      }\n    },\n    tryToBackup: async () => {\n      await backup(config).catch(catchError);\n      notify('🔜', 'Your settings have been saved.');\n    },\n    tryToRestore: async () => {\n      await restore(config).catch(catchError);\n      notify('🔙', 'Your settings have been restored.');\n    },\n  };\n};\n"]}