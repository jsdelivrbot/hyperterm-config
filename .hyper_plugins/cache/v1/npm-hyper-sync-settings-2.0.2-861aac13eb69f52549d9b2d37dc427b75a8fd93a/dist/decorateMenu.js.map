{"version":3,"sources":["../src/decorateMenu.js"],"names":["open","menu","checkAndCallback","commandsAndConfig","callback","commands","checkForUpdates","config","getConfig","syncSettings","accelerators","syncSettingsAccelerators","reduce","allAccelerators","nextKey","accelerator","map","item","label","submenu","type","click","tryToBackup","backupSettings","tryToRestore","restoreSettings","window","url","openGist","dirs","repo","openRepo","files","openConfiguration"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;;AACA;;;;AACA;;;;kBAEe,UAACA,IAAD,EAAqB;AAAA,MAAdC,IAAc,uEAAP,EAAO;;AAClC,MAAMC,mBAAmB,SAAnBA,gBAAmB;AAAA,WAAY,YAAM;AACzC,UAAMC,oBAAoB,uCAAwBH,IAAxB,CAA1B;AACA,UAAIG,sBAAsB,KAA1B,EAAiC;AACjCC,eAASD,iBAAT;AACD,KAJwB;AAAA,GAAzB;;AAMAD,mBAAiB;AAAA,QAAGG,QAAH,QAAGA,QAAH;AAAA,WAAkBA,SAASC,eAAT,EAAlB;AAAA,GAAjB;;AAPkC,cASsB,cAAIC,MAAJ,CAAWC,SAAX,GAAuBC,YAAvB,IAAuC,EAT7D;AAAA,iCAS1BC,YAT0B;AAAA,MASZC,wBATY,sCASe,EATf;;AAUlC,MAAMD,eAAe,gCAAqBE,MAArB,CACnB,UAACC,eAAD,EAAkBC,OAAlB,EAA8B;AAC5B,QAAMC,cAAcJ,yBAAyBG,OAAzB,CAApB;AACA,sCACKD,eADL,oCAEGC,OAFH,EAEaC,cAAc,EAAEA,wBAAF,EAAd,GAAgC,EAF7C;AAID,GAPkB,EAQnB,EARmB,CAArB;;AAWA,SAAOd,KAAKe,GAAL,CACL,gBAAQ;AACN,QAAIC,KAAKC,KAAL,KAAe,SAAnB,EAA8B,OAAOD,IAAP;AAC9B,sCACKA,IADL;AAEEE,0DACKF,KAAKE,OADV,IAEE;AACED,eAAO,eADT;AAEEE,cAAM,SAFR;AAGED,iBAAS;AAELD,iBAAO,mBAFF;AAGLG,iBAAOnB,iBAAiB;AAAA,gBAAGG,QAAH,SAAGA,QAAH;AAAA,mBAAkBA,SAASC,eAAT,EAAlB;AAAA,WAAjB;AAHF,WAIFI,aAAaJ,eAJX;AAOLY,iBAAO,iBAPF;AAQLG,iBAAOnB,iBAAiB;AAAA,gBAAGG,QAAH,SAAGA,QAAH;AAAA,mBAAkBA,SAASiB,WAAT,EAAlB;AAAA,WAAjB;AARF,WASFZ,aAAaa,cATX;AAYLL,iBAAO,kBAZF;AAaLG,iBAAOnB,iBAAiB;AAAA,gBAAGG,QAAH,SAAGA,QAAH;AAAA,mBAAkBA,SAASmB,YAAT,EAAlB;AAAA,WAAjB;AAbF,WAcFd,aAAae,eAdX,GAgBP;AACEP,iBAAO,MADT;AAEEE,gBAAM,SAFR;AAGED,mBAAS;AAELD,mBAAO,MAFF;AAGLG,mBAAOnB,iBACL;AAAA,kBAAGK,MAAH,SAAGA,MAAH;AAAA,qBAAgBP,KAAK0B,MAAL,CAAYnB,SAASA,OAAOoB,GAAhB,qBAAZ,CAAhB;AAAA,aADK;AAHF,aAMFjB,aAAakB,QANX;AASLV,mBAAO,MATF;AAULG,mBAAO;AAAA,qBAAMrB,KAAKiB,IAAL,CAAU,iBAAMY,IAAN,CAAWC,IAArB,CAAN;AAAA;AAVF,aAWFpB,aAAaqB,QAXX;AAcLb,mBAAO,eAdF;AAeLG,mBAAO;AAAA,qBAAMrB,KAAKiB,IAAL,CAAU,iBAAMe,KAAN,CAAYzB,MAAtB,CAAN;AAAA;AAfF,aAgBFG,aAAauB,iBAhBX;AAHX,SAhBO;AAHX,OAFF;AAFF;AAkDD,GArDI,CAAP;AAuDD,C","file":"decorateMenu.js","sourcesContent":["import { app } from 'electron';\nimport checkForMissingSettings from './lib/checkForMissingSettings';\nimport { gistUrl, paths, possibleAccelerators } from './constants';\n\nexport default (open, menu = []) => {\n  const checkAndCallback = callback => () => {\n    const commandsAndConfig = checkForMissingSettings(open);\n    if (commandsAndConfig === false) return;\n    callback(commandsAndConfig);\n  };\n\n  checkAndCallback(({ commands }) => commands.checkForUpdates());\n\n  const { accelerators: syncSettingsAccelerators = {} } = app.config.getConfig().syncSettings || {};\n  const accelerators = possibleAccelerators.reduce(\n    (allAccelerators, nextKey) => {\n      const accelerator = syncSettingsAccelerators[nextKey];\n      return {\n        ...allAccelerators,\n        [nextKey]: accelerator ? { accelerator } : {},\n      };\n    },\n    {},\n  );\n\n  return menu.map(\n    item => {\n      if (item.label !== 'Plugins') return item;\n      return {\n        ...item,\n        submenu: [\n          ...item.submenu,\n          {\n            label: 'Sync Settings',\n            type: 'submenu',\n            submenu: [\n              {\n                label: 'Check for Updates',\n                click: checkAndCallback(({ commands }) => commands.checkForUpdates()),\n                ...accelerators.checkForUpdates,\n              },\n              {\n                label: 'Backup Settings',\n                click: checkAndCallback(({ commands }) => commands.tryToBackup()),\n                ...accelerators.backupSettings,\n              },\n              {\n                label: 'Restore Settings',\n                click: checkAndCallback(({ commands }) => commands.tryToRestore()),\n                ...accelerators.restoreSettings,\n              },\n              {\n                label: 'Open',\n                type: 'submenu',\n                submenu: [\n                  {\n                    label: 'Gist',\n                    click: checkAndCallback(\n                      ({ config }) => open.window(config ? config.url : gistUrl),\n                    ),\n                    ...accelerators.openGist,\n                  },\n                  {\n                    label: 'Repo',\n                    click: () => open.item(paths.dirs.repo),\n                    ...accelerators.openRepo,\n                  },\n                  {\n                    label: 'Configuration',\n                    click: () => open.item(paths.files.config),\n                    ...accelerators.openConfiguration,\n                  },\n                ],\n              },\n            ],\n          },\n        ],\n      };\n    },\n  );\n};\n"]}